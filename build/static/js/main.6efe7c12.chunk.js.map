{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","search","onChange","handleSearch","PersonForm","onSubmit","addNewPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","showContacts","remove","map","contact","i","key","name","number","onClick","id","baseUrl","axios","get","then","response","data","newContact","post","updateContact","put","delete","Notification","message","error","className","success","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","setMessage","filter","person","toLowerCase","includes","useEffect","personServices","event","target","preventDefault","find","window","confirm","changedPerson","console","log","returnedPerson","setTimeout","catch","concat","personsAfter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6efe7c12.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>filter shown with <input value={props.search} onChange={props.handleSearch} /></div>\r\n  )\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.addNewPerson}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n    )\r\n  };\r\n\r\n  export default PersonForm;\r\n  ","import React from 'react';\r\n\r\nconst Persons = ({ showContacts, remove }) => {\r\n\r\n    return (\r\n      <div>\r\n      {showContacts.map((contact, i) => {\r\n        return (\r\n          <p key={i}> {contact.name} {contact.number} <button onClick={() => remove(contact.id)}>delete</button> </p>\r\n        )\r\n      })}\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios';\r\nconst baseUrl = 'https://fullstack-niklasr.herokuapp.com/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst create = newContact => {\r\n    const request = axios.post(baseUrl, newContact);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, updateContact) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updateContact);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, deletePerson };","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    if (message.error) {\r\n        return (\r\n            <div className='error'>\r\n                {message.error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (message.success) {\r\n        return (\r\n            <div className='success'>\r\n                {message.success}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personServices from './services/persons';\nimport './index.css';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ search, setSearch ] = useState('');\n  const [ message, setMessage ] = useState(null);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const showContacts =  search ? persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase())) : persons;\n\n  const addNewPerson = (event) => {\n    event.preventDefault();\n\n    if (persons.find(person => person.name.toLowerCase() === newName.toLowerCase())) {\n      if (window.confirm(`Person ${newName} already exists on the phonebook. Do you want to update the number?`)) {\n        const person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase());\n        const changedPerson = {...person, number: newNumber};\n        const id = person.id;\n        console.log('Person: ', person);\n        console.log('changedPerson: ', changedPerson);\n        console.log('ID: ', id);\n        personServices\n          .update(id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson));\n            setMessage({success: `Person ${returnedPerson.name} updated!`});\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n          })\n          .catch(error => {\n            setMessage({error: error});\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n          })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      };\n      personServices\n        .create(newPerson)\n        .then(person => {\n          setPersons(persons.concat(person));\n          setNewName('');\n          setNewNumber('');\n          setMessage({success: `Person ${person.name} added to phonebook!`});\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch(error => {\n          setMessage({error: error});\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n    }\n\n\n  }\n\n  const removePerson = id => {\n    if (window.confirm('Are you sure you want to delete this?')) {\n      personServices\n      .deletePerson(id)\n      .then(() => {\n        const personsAfter = persons.filter(person => person.id !== id);\n        setPersons(personsAfter);\n      })\n      .catch(error => {\n        setMessage([{error: error}]);\n        setTimeout(() => {\n          setMessage([]);\n        }, 5000);\n      })\n    }\n  }\n\n  useEffect(() => {\n    personServices\n      .getAll()\n      .then(persons => {\n        setPersons(persons);\n      })\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter search={search} handleSearch={handleSearch} />\n      <Notification message={message} />\n      <h2>add a new</h2>\n      <PersonForm \n        addNewPerson={addNewPerson} \n        newName={newName} \n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}  \n      />\n      <h2>Numbers</h2>\n      <Persons showContacts={showContacts} remove={removePerson} />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}